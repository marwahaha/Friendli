# ----------------------------------------------
#  Wallpaper function
# ----------------------------------------------
wallpaper(){
clear
echo -e "\t[+]This tool was created in order to facilitate the interaction"
echo -e "\t between the new linux users and the terminal."
echo -e "\t[+]The name is the abreviation of two words: Friendly Linux."
cat tag
echo -e "\n"
echo -e "\t\t&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&"
echo -e "\t\t**** Creator name: Namouchi Zied *****"
echo -e "\t\t&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&"
echo -e "\t\t**** Creation_date: 14/02/2017/ ******"
echo -e "\t\t&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&"
echo -e "\n"
echo -e "[!] IMPORTANT: If this is your first use I recommand you to type readme and read more about this application, you can maybe type menu to navigate or exit to exit the application"
echo -e "\n"
}

# ----------------------------------------------
#  The First menu function
# ----------------------------------------------
show_first_menu(){
echo "1)System"
echo "2)Managing users"
echo "3)Managing files and directories"
echo "4)Configuring firewall"
echo "5)Planning system tasks"
echo "6)System update and upgrade"
echo "7)exit"
}

# ----------------------------------------------
#  exit function
# ----------------------------------------------
exit_func(){
echo "I hope FriendLi was nice to you! See you later!"
exit 0
}

# ----------------------------------------------
#  read_me function
# ----------------------------------------------
read_me(){
echo -e "\n"
echo -e "   This is the help provided by the developer of this tool.
If you are new to linux I strongly recommend you to start by reading the manual of each command before using it, to do this you just have to type man followed by the name of the command.
As for this tool, you will find a wide range of menus helping you to carry out administrative tasks on your machine even if you do not yet master linux. This is intended for new linux users who are fed up with user interfaces that stagnate the brain and that are not yet accustomed to the terminal. Type back to go back and exit to terminate this program"
echo -e "\n"
}

# ----------------------------------------------
#  Trap CTRL+C, CTRL+Z and quit singles
# ----------------------------------------------
trap '' SIGINT SIGQUIT SIGTSTP

# -----------------------------------
# users menu
# ------------------------------------
users_menu(){
wallpaper
echo " this function will show users menu"
}

# -----------------------------------
# files and directories menu
# ------------------------------------
files_menu(){
wallpaper
echo " this function will show files menu"
}

# -----------------------------------
# firewall
# ------------------------------------
firewall_menu(){
wallpaper
echo " this function will show firewall menu"
}

# -----------------------------------
# tasks menu
# ------------------------------------
tasks_menu(){
wallpaper
echo " this function will show the tasks menu"
}

# -----------------------------------
# update_upgrade menu
# ------------------------------------
up_menu(){
wallpaper
echo "1) update"
echo "2) upgrade"
echo "3)dist-upgrade"
echo "4)back"
}

# -----------------------------------
# System
# ------------------------------------
system(){
wallpaper
echo " this function will exectute the system info grabber script"
}

# -----------------------------------
# Main logic - infinite loop
# ------------------------------------
while true
do
wallpaper
read -p "FriendLi>" choice
if [ $choice = menu ]; then
	show_first_menu
	read -p "FriendLi/menu>" choice
	case $choice in
		1) system
		    read -p"FriendLi/menu/system>" choice;;
		2) users_menu
		    read -p"FriendLi/menu/users_menu>" choice;;
		3) files_menu
		    read -p"FriendLi/menu/files_menu>" choice;;
		4) firewall_menu
		    read -p"FriendLi/menu/firewall_menu>" choice;;
		5) tasks_menu
		    read -p"FriendLi/menu/tasks_menu>" choice ;;
		6) up_menu 
		    read -p"FriendLi/menu/up_menu>" choice;;
		7) exit_func ;;
		*) echo "Bad choice please choice"
		   read -p "FriendLi/menu>" choice;;
	esac  	
elif [ $choice = readme ]; then
	read_me
	read -p "FriendLi/readme>" choice
	if [ $choice = exit ]; then
		exit_func
	elif [ $choice = back ]; then
		wallpaper
		read -p "FriendLi>" choice
		show_first_menu	
		read -p "FriendLi/menu>" choice
	else
		echo "[!]Bad choice try to type in either back or exit"
	fi
elif [ $choice = exit ]; then
        exit_func
else
                echo "[!]Wrong commande: $choice please use help or menu"
fi
done                                                      


                                                        
                                                        